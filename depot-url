#!/usr/bin/env bash

set -euo pipefail

function log() {
    "${DEPOT_BIN}" \
    --log-level="${DEPOT_LOG_LEVEL}" \
    --log-name="${DEPOT_LOG_NAME}" \
    log \
    "${1}" \
    "${*:2}"
}

function path() {
    "${DEPOT_BIN}" path "${DEPOT_URL_PATH_FORMAT:-basename}" "${1}"
}

function run() {
    log TRACE "${*}"
    [ "${DEPOT_DRY_RUN}" == yes ] || "${@}"
}

# replace environment variables (except 'DEPOT_URL_POST_CMD')
export DEPOT_URL_IN="$(echo "${DEPOT_URL_IN}" | envsubst)"
export DEPOT_URL_IN_PREFIX="$(echo "${DEPOT_URL_IN_PREFIX:-}" | envsubst)"
export DEPOT_URL_IN_SUFFIX="$(echo "${DEPOT_URL_IN_SUFFIX:-}" | envsubst)"
export DEPOT_URL_OUT="$(echo "${DEPOT_URL_OUT:-}" | envsubst)"
export DEPOT_URL_OUT_PREFIX="$(echo "${DEPOT_URL_OUT_PREFIX:-}" | envsubst)"
export DEPOT_URL_OUT_SUFFIX="$(echo "${DEPOT_URL_OUT_SUFFIX:-}" | envsubst)"
export DEPOT_URL_PART_SUFFIX="$(echo "${DEPOT_URL_PART_SUFFIX:-}" | envsubst)"
export DEPOT_URL_PATH_FORMAT="$(echo "${DEPOT_URL_PATH_FORMAT}" | envsubst)"
log TRACE "$(env | grep '^DEPOT_' | sort)"

# prepare variables
export IN="$(
    printf '%s%s%s' \
    "${DEPOT_URL_IN_PREFIX:-}" \
    "${DEPOT_URL_IN}" \
    "${DEPOT_URL_IN_SUFFIX:-}"
)"
export OUT="$(
    printf '%s/%s%s%s' \
    "${DEPOT_DIR}" \
    "${DEPOT_URL_OUT_PREFIX:-}" \
    "${DEPOT_URL_OUT:-$(path "${IN}")}" \
    "${DEPOT_URL_OUT_SUFFIX:-}"
)"
PART="${OUT}${DEPOT_URL_PART_SUFFIX:-.part}"

# prepare commands
CURL_CMD=(
    curl
    --create-dirs
    --location
    --output "${PART}"
    --url "${IN}"
)
MV_CMD=(
    mv
    "${PART}"
    "${OUT}"
)
BASH_CMD=(
    bash
    -c
    "$(cat << EOF
set -euo pipefail
cd '${DEPOT_DIR}'
${DEPOT_URL_POST_CMD:-}
EOF
    )"
)

if [ -e "${OUT}" ]
then
    log INFO "already exists"
    exit 0
fi

log INFO "fetching..."
run "${CURL_CMD[@]}"
run "${MV_CMD[@]}"

if [ -n "${DEPOT_URL_POST_CMD:-}" ]
then
    log DEBUG "post processing..."
    run "${BASH_CMD[@]}"
fi

log INFO 'done'
